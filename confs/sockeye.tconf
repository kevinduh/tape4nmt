global {
  num_layers=(TestMode: no="6:6" yes="1:1")
  model_size=512
  embed_size="512:512"

  # all default is consistent with nematus
  train_train_from="" # if there is a previous model to start with
  train_train_from_state_dict="" # if there is a previous dict to start with
  train_start_epoch="" # if trained for certain amount of epochs previously

  train_batch_type=(TestMode: no="word" yes="sentence")
  train_batch_size=(TestMode: no="80" yes=8)
  train_optim="adam"
  train_dropout=(Dropout: 0.1 0.3 0.5)
  train_lr="0.001"

  # train_lr_min="1e-8"
  train_lr_min=""
  train_lr_shrink="0.5"

  # train_lr_scheduler="inverse_sqrt"
  # train_warmup_init_lr="1e-07"
  # train_warmup_updates="4000"
  # train_criterion="label_smoothed_cross_entropy"
  # train_label_smoothing="0.1"
  train_lr_scheduler=""
  train_warmup_init_lr=""
  train_warmup_updates=""
  train_criterion=""
  train_label_smoothing=""
  train_clip_norm=(ClipNorm: 0.0 0.1 0.5 1 5)
  train_max_tokens="4000"
  train_arch=(Architecture: conv="fconv" transformer="transformer" fconv_iwslt_de_en="fconv_iwslt_de_en" transformer_iwslt_de_en="transformer_iwslt_de_en")
  train_share_input_output_embed=""
  train_skip_invalid_size_inputs_valid_test="yes"
  train_adam_beta1="0.9"
  train_adam_beta2="0.999"

  # Sockeye
  train_checkpoint_freq=(TestMode: no=5000 yes=100)
  train_max_checkpoints_not_improved=(TestMode: no=16 yes=0)
  train_num_decode_and_eval=(TestMode: no=500 yes=10)

  # TEST CONFIGURATIONS
  test_model_selection_strategy="acc"
  test_max_sent_length="300"
  test_beam_size=(TestMode: no="12" yes="1")
  test_batch_size=1
  test_replace_unk="True"
  test_remove_bpe=""
}
